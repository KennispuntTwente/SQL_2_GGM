[database-source]
SRC_DRIVER = oracle+oracledb
SRC_HOST = localhost
SRC_PORT = 1521
SRC_USERNAME = sa
SRC_PASSWORD = SecureP@ss1!24323482349
SRC_DB = ggm
SRC_SCHEMA = 

[database-destination]
DST_DRIVER = postgresql+psycopg2
DST_HOST = localhost
DST_PORT = 5432
DST_USERNAME = sa
DST_PASSWORD = SecureP@ss1!24323482349
DST_DB = ggm
DST_SCHEMA = ggm

[settings]
# Comma-separated van tabellen om op te halen uit de brondatabase ('database-source')
SRC_TABLES = szclient, wvbedrag, wvaanb

# Chunk size; aantal rijen dat in één keer in werkgeheugen wordt geladen
# Dit wordt gebruikt om problemen met 'larger-than-memory' data op te lossen
# Je kan het kleiner of groter maken afhankelijk van hoeveel werkgeheugen (RAM) je machine heeft
SRC_CHUNK_SIZE = 100000

# Of je ConnectorX wil gebruiken in de verbinding met de brondatabase ('database-source')
# ConnectorX is in de meeste gevallen sneller & lijkt beter om te gaan met diverse data-types
# (Als je hier 'False' opgeeft, wordt i.p.v. ConnectorX de connector van SQLAlchemy gebruikt)
SRC_CONNECTORX = True

# Wanneer je ConnectorX gebruikt i.c.m. met een OracleDB (als 'database-source'), kan het 
# nodig zijn om het pad naar een Oracle-client te specificeren (bijv., C:\oracle\instantclient_21_18")
# (Je kan dit eventueel hier downloaden: https://www.oracle.com/database/technologies/instant-client/downloads.html)
SRC_CONNECTORX_ORACLE_CLIENT_PATH =

# Wanneer je ConnectorX gebruikt i.c.m. met een OracleDB (als 'database-source'), kan het
# nodig zijn om een TNS Alias (DNS) te gebruiken. Zo ja, zet onderstaande value op 'True'
# en vul dan de alias bij 'SRC_HOST' ('SRC_DB' & 'SRC_PORT' mogen dan leeg zijn; die worden
# dan namelijk in de details onder de alias gespecificeerd)
SRC_ORACLE_TNS_ALIAS = False

# Of wachtwoord gevraagd wordt in de console i.p.v. uit te lezen uit je environment variables
# of uit je .ini-config. Als je hiervan gebruikt maakt betekent het ook dat het script
# alleen interactief gerund kan worden
ASK_PASSWORD_IN_CLI = False

[logging]
# Globale logging-niveau; vanaf welk type message moet gelogd worden?
# Kan zijn: DEBUG, INFO, WARNING, of ERROR
LOG_LEVEL = INFO
# Of logs in een logbestand moeten worden opgeslagen
LOG_TO_FILE = False
# Locatie van het logbestand (wordt aangemaakt indien deze nog niet bestaat)
LOG_FILE = logs/source_to_staging.log
# Max. grootte (in bytes) van het logbestand voordat er een nieuw bestand wordt gestart (rotatie). Voorbeeld: 5.000.000 ≈ 5 MB
LOG_ROTATE_BYTES = 5000000
# Aantal oude logbestanden dat bewaard blijft bij rotatie (bijv. app.log.1 t/m app.log.N)
LOG_BACKUP_COUNT = 3
# Optioneel: eigen opmaak van logregels. Laat weg voor standaard; voorbeeld toont tijd, level, logger en bericht
# LOG_FORMAT = %(asctime)s %(levelname)-8s [%(name)s] %(message)s
